云健康复app swagger http://192.168.0.156:4981/index.html   消息http://192.168.0.156:5134/index.html
vte swagger http://192.168.0.156:5600/index.html?urls.primaryName=VTE%CF%B5%CD%B3API%20V1
Jenkins: http://192.168.0.157:8080/
账号密码: huanghaiyang / huanghaiyang@123
npm url http://192.168.0.158:4873/
flutter 图标 https://fonts.google.com/icons?icon.query=error  主题https://rydmike.com/flexcolorscheme/themesplayground-latest/

vte v3测试环境页面服务地址： http://192.168.0.155:8092/      前端-康复-院内应用-后台V3 
 
后台 http://172.16.2.82:8086/bigView/#/bigScreen/patientView 
管理后台菜单  http://192.168.0.155/platformadmin/#/login?redirect=/ 15920137509 123456
sass  17000000001 12345678  pc测试http://192.168.0.155:8091/#/login?redirect=/medical-records/inpatient
正式pc系统 13812345678  https://ghosp.cloundhealth.com/#/medical-records/inpatient
v3pc测试 http://192.168.0.155:8086/#/medical-records/inpatient
uniapp测试 http://192.168.9.105:8083/meta/pages-content/rest/dayOff

Verdaccio 
密码：13800138000 Womsoft@123 康复科 住院 启用
gitlab  http://192.168.0.152/
需求文档 http://192.168.0.150/zentao/my/  wanghuajie User@123
npm :   http://192.168.0.158:4873/

评定账号15603064501

#ff19647e  https://kfk.pnsrmyyyygh.com:18077

 transition   调试  
医嘱的保存和发送有什么区别，以及发送到his,导入his医嘱，排班展示以及今日排班，值班

带教系统分为四个部分 带教部门、学生管理、带教编排、学生分类。
学生分类的数据用于学生管理添加实习生选择学生分类使用，带教部门的数据用于学生管理分配时选择到哪个部门下的带教老师实习。
学生管理用于管理所有的实习生，有分配功能可以选择分配到不同部门去实习，最终完成实习可以选择出科打出该实习生的成绩。
带教编排有三个部分 学生编排、部门编排、老师编排，主要展示不同视角下的带教数据。学生编排会显示所有已分配的实习生，在这也可以再次分配带教老师给
实习生，部门编排主要展示部门各个时间阶段实习的人数，老师编排显示已被分配实习生的带教老师，同时可以再次分配实习生。

物联设备分为三个部分 设备管理、设备型号、设备监测
有些治疗项目中是需要设备参与治疗的，物联设备就是用来管理这些设备。设备型号展示了康复科有哪些设备类型，可以查看新增设备型号的信息。可以在
而设备管理主要展示了康复科所有的设备，每一台设备都有设备型号可以配置设备型号列表已有的数据。
设备监测展示了所有设备的状态信息在线设备、离线设备，以及设备使用数据的统计，例如设备用于治疗哪些疾病类型、患者年龄性别、使用次数金额等
一些数据统计。

早康推荐  有些患者需要转到康复科做术后康复，为了让治疗师更好地了解患者是否适合转到康复科，早康推荐就提供了患者的信息。患者要到康复科做康复，his就会生成一条数据，我们系统就会从his获取需要从别的科转到
康复科的数据。而转介单和早康推荐都是同一个目的，都是为了更好地了解患者信息，是否适合转到康复科
康复申请 也是和早康推荐一样的目的，只是具体实现不同。
历史患者 主要展示出院以及转科的患者数据，看患者以前开过哪些医嘱，评估过哪些量表，写过哪些文书等等一些关于患者的信息

调休互助，主要分为两大块，“我申请的”和“我收到的”，“我申请的”展示了我需要请假，然后把排班给我的患者转给接收治疗师的申请记录，而在接收治疗师账号上就能够查看到我收到的申请，也就是说“我收到的”展示了别的
治疗师的接收治疗师是我的记录，我就可以选择通过或者拒绝其他治疗师的申请。而选择了同意或者拒绝就会多一条历史记录。
在申请调休的时候，会根据调休时间，把这段时间排班给我的患者都转交给接收治疗师。

评定  主要是给患者做量表评估，量表评估可分为初期评估、中期评估、末期评估，但不是说一定要完成这三次的评估，有的医院并没有评的那么细没有中期评估。评估完之后治疗师就可以根据评估的情况来开对应的医嘱
来做治疗，而量表会有总体报告，总体报告包含了量表初期、中期、末期评估（如果已评估）的结果。对比这几次评估的结果，治疗师可以查看患者的病情是往好的方面发展还是坏的方面发展，当患者出院后再入院
就会有历史评估（如果之前有评估）可以查看患者的历史评估来了解病人对应的情况。

科室报表，报表的菜单项都可以通过后台中的报表配置中去配置，这样比较灵活，可以根据不同医院的要求去配置不同的报表。而报表就是通过数据表格、折线图、柱状图等一些方式
更好地展示数据，比较数据以及数据的趋势分析等等

临时执行  和预约执行是门诊才有的功能，当开完医嘱就会来到执行这个流程， 而有时候因为某种原因没有预约来了医院，所以就需要使用临时执行来帮助患者来执行治疗。能够临时执行
几次主要取决于开医嘱的时候开了几天以及预约了几次执行，如果预约次数已经和开医嘱的天数一样，那就得取消预约执行才能够临时执行了。正常情况是需要预约执行的，所以根据时间可以看到自己预约的记录
而预约执行上的数据是从his系统获取，本应用不用来预约。

执行汇总 顾名思义就是查看患者的执行情况，例如已执行了多少，取消执行了多少，未执行多少，可以进入详情页查看具体执行的记录

新增患者 患者入院后首先就需要登记患者信息，以便在后续的流程中使用。所以就有了新增患者的模块。主要是登记患者的姓名、姓名、年龄、患者病情等一些基础信息。app就会把
患者再录入到his系统中

随访管理 随访是出院之后的阶段，  随访管理又分为随访任务和随访记录，当一个患者出院了，并且有相关联诊断计划，满足计划设置出院后的天数随访任务就会多一条记录，而随访次数也是随访计划中决定的。
点击一条随访任务就会进入到问卷页面，初次完成问卷之后随访记录就会多一条，随访详情可以查看该患者所有完成的随访问卷，
治疗师可以可以根据问卷来了解患者出院后的康复效果以及存在的问题，
同时来评估患者对治疗服务的满意度，根据患者满意度进一步提高患者体验。

康复文书，不同医院根据需求来配置是否可以书写多次同一张文书，书写完文书之后归档了就不能够再删除。书写文书可以在入院、中期、出院阶段，文书可以记录患者的病情状况、康复目标、治疗方案以及变化等等，文书能够帮助治疗师评估治疗的效果。
也可以以此来调整治疗计划， 同时文书也是康复团队的交流工具，能够让所有参与的医疗人员都能了解患者的康复情况。


治疗方案，治疗套餐以及治疗项目均可在后台进行配置维护，医嘱是医生对患者治疗方案的指导，通过医嘱可以按照指定的治疗计划进行治疗，达到更好的康复效果，同时会在开医嘱的同时，
声明使用数量，以及频次和说明，能够能准确地根据医嘱来治疗，确保患者接受治疗的安全。通过开医嘱治疗套餐也能够帮助医护人员高效、快速准确的执行治疗计划，提高效率。
如果治疗效果不错达到预定的康复目标，可以选择停止医嘱治疗。


治疗建议  治疗建议与治疗方案紧密相连，是开治疗方案前一个阶段。治疗建议是治疗是根据患者的具体情况和康复需求，提出专业治疗的建议方案去开方案，也可以开停止方案的建议。
同时可以对新增或者停止的建议进行撤回操作


补录  通常情况下开完医嘱生成执行记录，但考虑到周末加班的情况，不会开医嘱生成执行记录。所以有了补录功能。补录功能可以更加快速便捷
地执行治疗，可以通过pda扫码以及页面点击的方式执行治疗。补录的过程是，通过pad扫码选择所要治疗的套餐，进一步检查执行相关信息以及套餐信息，
确认无误之后就可以直接点击补录。补录完成之后可以在补录列表中查看，补录完成后发现套餐选择错了或者具体套餐信息填写错了，可以撤销本次补录重新补录。

每日工作表 开完医嘱会根据频次来生成执行记录，停了该医嘱就往后就不会再生成执行记录，没来的及停止医嘱生成了执行记录或者其他原因，
可以选择取消这条执行记录，为了方便找到所要执行的记录，可以根据查询条件来进行筛选快速找到想要找到的执行记录，可以用单独对一条执行记录
进行执行，或者多选执行。单独执行一条可以查看执行相关的信息以防出错，执行前会校验是否执行该项目套餐，是否需要签名权限，医保是否通过，
这些都是为了能够正确无误的执行，执行完成之后，有签名需求的医院就会跳往签名页面进行签名。完成执行后也可以撤销执行，同时也会进行退费。
撤销取消执行可以重新再一次执行本次治疗。

机构列表 每家医院的系统设置都有所不同，每次需要手动配置太过繁琐，所以有机构选择后自动配置。添加所需要的机构并输入口令即可保存
机构到本地显示在机构列表中，点击选中后便可以确认是否要应用该配置。

执行记录签名 根据不同医院的需求，有的需要在执行完之后进行签名，签名可以确保治疗的合法性、安全性以及有效性。
所有的签名记录都可以在执行记录签名页面查看，可以选择对一条进行治疗师和患者签名或者一键签名。

CA授权列表 用于展示待签、已签、拒签的CA签名数据，完成签名之后才能够在执行治疗进行治疗师签名操作

  一开始系统的患者会从his获取患者（住院、门诊、他科）并同步，同时系统也具有新增患者功能可以手动添加患者会和his进行同步。
  治疗医嘱是患者的治疗计划，根据医嘱来进行治疗，可以导入his中患者已有的治疗医嘱同步到系统，在系统中添加的医嘱也会同步到his中。
  系统的治疗医嘱是以套餐的形式来开立的，这样的好处是 可以提高医院的收益以及提高医生开医嘱的效率。不用每次手动组合常用的套餐项目。
  一个治疗套餐都是由一个或多个治疗项目组成的，而每个医院的治疗项目有类似，但项目的报销类型、医保次数、价格等都得实际根据医院的具体情况而定，
同样，不同医院的同名套餐包含治疗项目以及治疗时间等都可能有所不同。
  一条医嘱的频次是后续生成执行记录的依据，同样频次、天数与门诊患者的临时执行和预约执行紧密相连，是确认能不能执行的依据。

治疗排班，是安排时间给用户做治疗，通常是护士来完成排班。

使用路由拦截和事件全局处理函数来实现页面锁功能，这功能能够一定程度保护相关页面的隐私数据。提高了用户账号数据的安全性。

使用mqtt实现排班叫号播报的功能，订阅同一个设备唯一号与后端进行通信接收播报数据。在排班大屏设备中使用mqtt可以保证消息的可靠性，以及在网络差的环境下实时送达。
叫号播报功能满足了一些医院的特定需求，减少了医务人员与患者之间的时间成本

通过 WebView 组件实现跨平台展示vue页面，使用 JavaScriptChannel 实现双向数据交互、复杂业务逻辑的交互。充分利用WebView 的缓存来提高页面加载速度，提高用户体验

功能干嘛的，数据从哪里来
https://blog.csdn.net/nslxcos/article/details/132795779

键盘事件处理 例如保存,退出等 区域放大缩小功能，预览功能
除了实现文书业务功能，同时添加了保存、退出等快捷键功能以及文书缩放功能，能够大大提高工作效率
向外部暴露了操作文书的一些方法，例如打印文书，重新加载文书，导入数据
根据配置确定容器宽高，通常是A4纸大小，A4宽高使用mm单位，需要对其转换
依赖的包少，vue作为外部依赖，打包出来的体积小1M不到
运用了很多ts相关知识，类型别名，interface等等，标签类型用了枚举，每个组件都有通用的属性，也有独有属性，用了泛型以及三元运算符、来获取具体组件属性类型
前端通过js对象的方式去写文书，然后保存js对象到后端，需要某个文书模板就会从后端请求拿到js对象，通过props方式把响应回来的js对象给文书容器组件
，在其内部就会遍历这个js对象，根据对应的标签类型渲染对应文书组件。

first contentful paint 0.9s
largest cotentful paint 0.9s
total blocking time 60ms
cumulative layout shift 0.011
可视化,websocket,webpack

封装通用确认框，考虑了内容溢出的情况，以及根据屏幕宽度适配确认框宽度，可以自定义确认取消按钮
根据需求用画板实现触屏手签签名，并保存图片。
量表视频上传功能,,使用vite的legacy插件实现js优雅降级解决浏览器兼容问题
实现扫码登录功能, 封装患者hook

参与内部文书组件开发并编写文书模板，实现电子化文书在线编写，归档功能使得文书可以永久保存而不丢失，取代传统纸质化编写方式。

使用webscoket实现医嘱、排班、调休等多种消息通知，医护人员能够快速查看最新工作任务，提高工作效率以及消息质控
一个设备上存在多个用户使用的情况，借助shared_preferences本地存储账号管理、账号切换功能。在后续使用其他账号不用重新登录更加便捷快速。

实现治疗师排班大屏显示，能够让治疗及时知道当前需要治疗的患者
通知书 明确时间、原因、金币，签名不用

直聘 linkedin

前端工程化是一种系统化的开发方法，可以降低开发成本，提高开发效率和可维护性。使用gitlab私有化管理所有项目，使用Verdaccio来搭建npm服务器
来管理私有化npm包。使用swagger来生成API文档，完成接口的调用和测试,我们的pc后台系统基于vben搭建，通过 ESLint、Prettier 等工具
来规范代码风格和规范， vben提供了很多常用的组件、指令以及封装了axios请求等等。app是flutter开发的，flutter资源相对少所以app项目是由我们
团队搭建的，我也参与部分搭建，编写公共组件和工具等。使用Jenkins 来完成CICD，提交代码即可部署到测试和生产环境中。这就是我们公司开发的一个流程



mqtt,页面锁，vite插件



http://192.168.0.155:8077/api/rehabilitation/hosp/CustomStatisticsReport/GetConfigDetailByCode?reportCode=%E6%B5%8B%E8%AF%95%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B
http://192.168.0.155:8077/api/rehabilitation/hosp/CustomStatisticsReport/GetReportResultWithTitle?reportCode=%E6%B5%8B%E8%AF%95%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B&queryParamsJson=%7B%22pageIndex%22%3A1%2C%22pageSize%22%3A50%7D